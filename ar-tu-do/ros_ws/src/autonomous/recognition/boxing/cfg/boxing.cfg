#!/usr/bin/env python
from dynamic_reconfigure.parameter_generator_catkin import *
PACKAGE = "boxing"

gen = ParameterGenerator()

gen.add(
    "voxel_size",                       # name
    double_t,                           # type
    0,                                  # config level
    "Specifies the voxel size.",        # description
    0.15,                               # default
    0.0001,                             # min
    10                                  # max
)

gen.add(
    "lidar_point_percentage",
    double_t,
    0,
    "How many percent of lidar points get analysed for voxelling",
    0.5,
    0,
    1
)

gen.add(
    "m_filter_by_min_score_enabled",
    bool_t,
    0,
    "Enable filtering by minimal score.",
    True
)

gen.add(
    "filter_by_min_score",
    double_t,
    0,
    "Minimal score for filtering.",
    0.002,
    0.0001,
    1
)

gen.add(
    "sor_enabled",
    bool_t,
    0,
    "Enable SOR.",
    False
)

gen.add(
    "sor_mean_k",
    double_t,
    0,
    "The mean K for SOR.",
    2,
    0.0001,
    10
)

gen.add(
    "sor_stddev_mul_thresh",
    double_t,
    0,
    "The standard derivation of multiple threshholds for SOR.",
    3,
    0.0001,
    10
)

gen.add(
    "enable_colors",
    bool_t,
    0,
    "Add color information for input pointcloud.",
    False 
)

gen.add(
    "adjacent_voxels",
    bool_t,
    0,
    "Get color from adjacent voxels as well.",
    True
)

gen.add(
    "color_levels",
    int_t,
    0,
    "Amount of different colors (R, G and B separately) we quantize to internally",
    4,
    2,
    256
)

gen.add(
    "color_samples",
    int_t,
    0,
    "Amount of random color points we sample from the colored pointcloud.",
    1,
    200,
    20000
)

exit(gen.generate(PACKAGE, "boxing", "boxing"))
